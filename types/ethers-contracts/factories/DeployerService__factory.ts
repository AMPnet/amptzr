/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DeployerService,
  DeployerServiceInterface,
} from "../DeployerService";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "campaign",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DeployAssetCampaign",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "issuer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "campaign",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "DeployIssuerAssetCampaign",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IAssetFactory",
            name: "assetFactory",
            type: "address",
          },
          {
            internalType: "contract ICfManagerSoftcapFactory",
            name: "cfManagerSoftcapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "issuer",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetOwner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "assetInitialTokenSupply",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "assetWhitelistRequired",
            type: "bool",
          },
          {
            internalType: "string",
            name: "assetName",
            type: "string",
          },
          {
            internalType: "string",
            name: "assetSymbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "assetInfo",
            type: "string",
          },
          {
            internalType: "address",
            name: "cfManagerOwner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cfManagerPricePerToken",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cfManagerSoftcap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cfManagerSoftcapMinInvestment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cfManagerSoftcapMaxInvestment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cfManagerTokensToSellAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "cfManagerWhitelistRequired",
            type: "bool",
          },
          {
            internalType: "string",
            name: "cfManagerInfo",
            type: "string",
          },
        ],
        internalType: "struct DeployerService.DeployAssetCampaignRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "deployAssetCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IIssuerFactory",
            name: "issuerFactory",
            type: "address",
          },
          {
            internalType: "contract IAssetFactory",
            name: "assetFactory",
            type: "address",
          },
          {
            internalType: "contract ICfManagerSoftcapFactory",
            name: "cfManagerSoftcapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "issuerOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "issuerStablecoin",
            type: "address",
          },
          {
            internalType: "address",
            name: "issuerWalletApprover",
            type: "address",
          },
          {
            internalType: "string",
            name: "issuerInfo",
            type: "string",
          },
          {
            internalType: "address",
            name: "assetOwner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "assetInitialTokenSupply",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "assetWhitelistRequired",
            type: "bool",
          },
          {
            internalType: "string",
            name: "assetName",
            type: "string",
          },
          {
            internalType: "string",
            name: "assetSymbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "assetInfo",
            type: "string",
          },
          {
            internalType: "address",
            name: "cfManagerOwner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cfManagerPricePerToken",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cfManagerSoftcap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cfManagerSoftcapMinInvestment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cfManagerSoftcapMaxInvestment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cfManagerTokensToSellAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "cfManagerWhitelistRequired",
            type: "bool",
          },
          {
            internalType: "string",
            name: "cfManagerInfo",
            type: "string",
          },
        ],
        internalType: "struct DeployerService.DeployIssuerAssetCampaignRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "deployIssuerAssetCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class DeployerService__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DeployerService> {
    return super.deploy(overrides || {}) as Promise<DeployerService>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DeployerService {
    return super.attach(address) as DeployerService;
  }
  connect(signer: Signer): DeployerService__factory {
    return super.connect(signer) as DeployerService__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeployerServiceInterface {
    return new utils.Interface(_abi) as DeployerServiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeployerService {
    return new Contract(address, _abi, signerOrProvider) as DeployerService;
  }
}
