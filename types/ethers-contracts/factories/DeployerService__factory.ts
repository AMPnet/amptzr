/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DeployerService,
  DeployerServiceInterface,
} from "../DeployerService";

const _abi = [
  {
    inputs: [],
    name: "deployAssetCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deployCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IIssuerFactory",
            name: "issuerFactory",
            type: "address",
          },
          {
            internalType: "contract IAssetFactory",
            name: "assetFactory",
            type: "address",
          },
          {
            internalType: "contract ICfManagerSoftcapFactory",
            name: "cfManagerSoftcapFactory",
            type: "address",
          },
          {
            internalType: "address",
            name: "issuerOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "issuerStablecoin",
            type: "address",
          },
          {
            internalType: "address",
            name: "issuerWalletApprover",
            type: "address",
          },
          {
            internalType: "string",
            name: "issuerInfo",
            type: "string",
          },
          {
            internalType: "address",
            name: "assetOwner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "assetInitialTokenSupply",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "assetWhitelistRequired",
            type: "bool",
          },
          {
            internalType: "string",
            name: "assetName",
            type: "string",
          },
          {
            internalType: "string",
            name: "assetSymbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "assetInfo",
            type: "string",
          },
          {
            internalType: "address",
            name: "cfManagerOwner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cfManagerPricePerToken",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cfManagerSoftcap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cfManagerTokensToSellAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "cfManagerWhitelistRequired",
            type: "bool",
          },
          {
            internalType: "string",
            name: "cfManagerInfo",
            type: "string",
          },
        ],
        internalType: "struct DeployerService.DeployIssuerAssetCampaignRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "deployIssuerAssetCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c41806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063487beb57146100465780636649a3f514610046578063d2e9c0dd14610050575b600080fd5b61004e610063565b005b61004e61005e36600461080e565b610065565b565b8051608082015160c0830151604051636c8a6f5560e01b81526000936001600160a01b031692636c8a6f55926100a2923092918391600401610a63565b602060405180830381600087803b1580156100bc57600080fd5b505af11580156100d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f491906107cf565b9050600082602001516001600160a01b031663d0404f5930848661010001518761012001518861014001518961016001518a61018001516040518863ffffffff1660e01b815260040161014d9796959493929190610aa1565b602060405180830381600087803b15801561016757600080fd5b505af115801561017b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019f91906107cf565b9050600083604001516001600160a01b031663bb80c25c3084876101c00151886101e001518961022001518a61024001516040518763ffffffff1660e01b81526004016101f196959493929190610b10565b602060405180830381600087803b15801561020b57600080fd5b505af115801561021f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024391906107cf565b6060850151604051630fcb0ae560e01b81529192506001600160a01b03851691630fcb0ae59161027591600401610a4f565b600060405180830381600087803b15801561028f57600080fd5b505af11580156102a3573d6000803e3d6000fd5b50505060e0850151604051630fcb0ae560e01b81526001600160a01b0386169250630fcb0ae5916102d691600401610a4f565b600060405180830381600087803b1580156102f057600080fd5b505af1158015610304573d6000803e3d6000fd5b5050506101a0850151604051630fcb0ae560e01b81526001600160a01b0386169250630fcb0ae59161033891600401610a4f565b600060405180830381600087803b15801561035257600080fd5b505af1158015610366573d6000803e3d6000fd5b5050604051632e61a57160e01b81526001600160a01b0385169250632e61a5719150610396908490600401610a4f565b600060405180830381600087803b1580156103b057600080fd5b505af11580156103c4573d6000803e3d6000fd5b505060405163025ed79960e01b81526001600160a01b038516925063025ed79991506103f590600190600401610b77565b600060405180830381600087803b15801561040f57600080fd5b505af1158015610423573d6000803e3d6000fd5b5050505060008461020001519050600081846001600160a01b0316633a98ef396040518163ffffffff1660e01b815260040160206040518083038186803b15801561046d57600080fd5b505afa158015610481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a591906109ec565b6104af9190610bac565b60405163a9059cbb60e01b815290915084906001600160a01b0382169063a9059cbb906104e29087908790600401610b5e565b602060405180830381600087803b1580156104fc57600080fd5b505af1158015610510573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053491906107f2565b5060e087015160405163a9059cbb60e01b81526001600160a01b0383169163a9059cbb9161056791908690600401610b5e565b602060405180830381600087803b15801561058157600080fd5b505af1158015610595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b991906107f2565b5060a08701516040516360f6899360e01b81526001600160a01b038816916360f68993916105ea9190600401610a4f565b600060405180830381600087803b15801561060457600080fd5b505af1158015610618573d6000803e3d6000fd5b505050606088015160405163157a618f60e11b81526001600160a01b0389169250632af4c31e9161064b91600401610a4f565b600060405180830381600087803b15801561066557600080fd5b505af1158015610679573d6000803e3d6000fd5b50505060e088015160405163157a618f60e11b81526001600160a01b0388169250632af4c31e916106ac91600401610a4f565b600060405180830381600087803b1580156106c657600080fd5b505af11580156106da573d6000803e3d6000fd5b5050506101a088015160405163157a618f60e11b81526001600160a01b0387169250632af4c31e9161070e91600401610a4f565b600060405180830381600087803b15801561072857600080fd5b505af115801561073c573d6000803e3d6000fd5b5050505050505050505050565b803561075481610be5565b919050565b803561075481610bfd565b600082601f830112610774578081fd5b813567ffffffffffffffff81111561078e5761078e610bcf565b6107a1601f8201601f1916602001610b82565b8181528460208386010111156107b5578283fd5b816020850160208301379081016020019190915292915050565b6000602082840312156107e0578081fd5b81516107eb81610be5565b9392505050565b600060208284031215610803578081fd5b81516107eb81610bfd565b60006020828403121561081f578081fd5b813567ffffffffffffffff80821115610836578283fd5b818401915061026080838703121561084c578384fd5b61085581610b82565b905061086083610749565b815261086e60208401610749565b602082015261087f60408401610749565b604082015261089060608401610749565b60608201526108a160808401610749565b60808201526108b260a08401610749565b60a082015260c0830135828111156108c8578485fd5b6108d487828601610764565b60c0830152506108e660e08401610749565b60e08201526101008381013590820152610120610904818501610759565b90820152610140838101358381111561091b578586fd5b61092788828701610764565b8284015250506101608084013583811115610940578586fd5b61094c88828701610764565b8284015250506101808084013583811115610965578586fd5b61097188828701610764565b8284015250506101a0610985818501610749565b908201526101c083810135908201526101e0808401359082015261020080840135908201526102206109b8818501610759565b9082015261024083810135838111156109cf578586fd5b6109db88828701610764565b918301919091525095945050505050565b6000602082840312156109fd578081fd5b5051919050565b60008151808452815b81811015610a2957602081850181015186830182015201610a0d565b81811115610a3a5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b038581168252848116602083015283166040820152608060608201819052600090610a9790830184610a04565b9695505050505050565b6001600160a01b0388811682528716602082015260408101869052841515606082015260e060808201819052600090610adc90830186610a04565b82810360a0840152610aee8186610a04565b905082810360c0840152610b028185610a04565b9a9950505050505050505050565b6001600160a01b038781168252861660208201526040810185905260608101849052821515608082015260c060a08201819052600090610b5290830184610a04565b98975050505050505050565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60405181810167ffffffffffffffff81118282101715610ba457610ba4610bcf565b604052919050565b600082821015610bca57634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610bfa57600080fd5b50565b8015158114610bfa57600080fdfea26469706673582212202204a9ddd1c7d589548f5a512e8f54f023db25928b27bfecc7ce82cf8188815b64736f6c63430008000033";

export class DeployerService__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DeployerService> {
    return super.deploy(overrides || {}) as Promise<DeployerService>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DeployerService {
    return super.attach(address) as DeployerService;
  }
  connect(signer: Signer): DeployerService__factory {
    return super.connect(signer) as DeployerService__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeployerServiceInterface {
    return new utils.Interface(_abi) as DeployerServiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeployerService {
    return new Contract(address, _abi, signerOrProvider) as DeployerService;
  }
}
